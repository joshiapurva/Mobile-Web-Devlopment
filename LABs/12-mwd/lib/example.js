// Generated by CoffeeScript 1.3.1
(function() {
  var ToDoItem, ToDoItemStatic, ToDoWhen, add, blue, eat, foo, food, msg, mydata, n, obj, onetwothree, p, red, show, todo, todos, val, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  foo = "bar";

  _ref = ["#f00", "#00f"], red = _ref[0], blue = _ref[1];

  console.log(foo, red, blue);

  mydata = {
    prop1: "a",
    prop2: ["b", "c"],
    prop3: {
      subprop1: "d",
      subprop2: true,
      subprop3: 100
    }
  };

  console.log(mydata);

  add = function(x, y) {
    return x + y;
  };

  console.log(add(1, 2));

  show = true;

  val = 8;

  if (val === 8 && (show != null)) {
    msg = "val is " + val;
  }

  console.log(msg);

  eat = function(food) {
    return console.log("bite " + food);
  };

  _ref1 = ['toast', 'cheese'];
  for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
    food = _ref1[_i];
    eat(food);
  }

  onetwothree = (function() {
    var _j, _results;
    _results = [];
    for (n = _j = 1; _j <= 3; n = ++_j) {
      _results.push(n);
    }
    return _results;
  })();

  console.log(onetwothree);

  obj = {
    p1: 1,
    p2: 2,
    p3: 3,
    p4: 4
  };

  for (p in obj) {
    if (0 === obj[p] % 2) {
      console.log("" + p + "=" + obj[p]);
    }
  }

  ToDoItem = (function() {

    ToDoItem.name = 'ToDoItem';

    ToDoItem.prototype.text = '';

    ToDoItem.prototype.done = false;

    function ToDoItem(text) {
      this.text = text;
    }

    ToDoItem.prototype.print = function() {
      return console.log("" + this.text + ", done:" + this.done);
    };

    return ToDoItem;

  })();

  todos = [new ToDoItem('earn money'), new ToDoItem('pay bills')];

  for (_j = 0, _len1 = todos.length; _j < _len1; _j++) {
    todo = todos[_j];
    todo.print();
  }

  ToDoItemStatic = (function() {

    ToDoItemStatic.name = 'ToDoItemStatic';

    ToDoItemStatic.prefix = 'TODO:';

    ToDoItemStatic.prototype.text = '';

    ToDoItemStatic.prototype.done = false;

    function ToDoItemStatic(text) {
      this.text = text;
    }

    ToDoItemStatic.prototype.print = function() {
      return console.log("" + ToDoItemStatic.prefix + " " + this.text + ", done:" + this.done);
    };

    return ToDoItemStatic;

  })();

  todos = [new ToDoItemStatic('earn money'), new ToDoItemStatic('pay bills')];

  for (_k = 0, _len2 = todos.length; _k < _len2; _k++) {
    todo = todos[_k];
    todo.print();
  }

  ToDoWhen = (function(_super) {

    __extends(ToDoWhen, _super);

    ToDoWhen.name = 'ToDoWhen';

    function ToDoWhen(text) {
      ToDoWhen.__super__.constructor.call(this, text);
      this.due = 'today';
    }

    ToDoWhen.prototype.print = function() {
      return console.log("" + this.text + ", done:" + this.done + ", due:" + this.due);
    };

    return ToDoWhen;

  })(ToDoItem);

  todos = [new ToDoWhen('earn money'), new ToDoWhen('pay bills')];

  for (_l = 0, _len3 = todos.length; _l < _len3; _l++) {
    todo = todos[_l];
    todo.print();
  }

}).call(this);
